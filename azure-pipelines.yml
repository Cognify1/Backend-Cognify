trigger:
  branches:
    include:
      - '*'

pr:
  branches:
    include:
      - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  AZURE_DEVOPS_ORG: 'tu_organizacion'        # <--- Cambia por tu organización
  AZURE_DEVOPS_PROJECT: 'tu_proyecto'        # <--- Cambia por tu proyecto
  PAT: $(system.accesstoken)                 # Token de acceso (OAuth) para llamadas API

jobs:
- job: FollowTasks
  displayName: 'Actualizar tasks Follow AB#ID y User Story'
  steps:
    - checkout: self

    - script: |
        echo "Procesando commits Follow AB#ID..."

        # Obtener commits del push o merge
        COMMITS=$(git log origin/$(Build.SourceBranchName)..HEAD --pretty=%B)

        echo "$COMMITS" | while read -r line; do
          # Extraer IDs de tasks
          WORK_ITEMS=$(echo "$line" | grep -o 'Follow AB#[0-9]\+' | sed 's/Follow AB#//g')

          for ID in $WORK_ITEMS; do
            if [ "$(Build.SourceBranchName)" == "develop" ]; then
              # -----------------------------
              # Merge a develop → mover task a Done
              # -----------------------------
              echo "Merge a develop: Moviendo task $ID a Done..."
              curl -s -u :$(PAT) \
                -X PATCH \
                -H "Content-Type: application/json-patch+json" \
                -d "[{\"op\": \"add\", \"path\": \"/fields/System.State\", \"value\": \"Done\"}]" \
                https://dev.azure.com/$(AZURE_DEVOPS_ORG)/$(AZURE_DEVOPS_PROJECT)/_apis/wit/workitems/$ID?api-version=7.0

              # -----------------------------
              # Revisar User Story asociada
              # -----------------------------
              US_ID=$(curl -s -u :$(PAT) \
                        https://dev.azure.com/$(AZURE_DEVOPS_ORG)/$(AZURE_DEVOPS_PROJECT)/_apis/wit/workitems/$ID?$expand=relations&api-version=7.0 \
                        | jq -r '.relations[] | select(.rel=="System.LinkTypes.Hierarchy-Reverse") | .url' \
                        | awk -F/ '{print $NF}')

              # Revisar todas las tasks hijas
              ALL_DONE=$(curl -s -u :$(PAT) \
                        https://dev.azure.com/$(AZURE_DEVOPS_ORG)/$(AZURE_DEVOPS_PROJECT)/_apis/wit/workitems/$US_ID?$expand=relations&api-version=7.0 \
                        | jq -r '.relations[] | select(.rel=="System.LinkTypes.Hierarchy-Forward") | .url' \
                        | while read CHILD_URL; do
                            STATE=$(curl -s -u :$(PAT) $CHILD_URL?api-version=7.0 | jq -r '.fields["System.State"]')
                            if [ "$STATE" != "Done" ]; then echo "false"; fi
                          done)

              if [ -z "$ALL_DONE" ]; then
                echo "Todas las tasks Done → moviendo User Story $US_ID a Committed (aparece Review en Board)..."
                curl -s -u :$(PAT) \
                  -X PATCH \
                  -H "Content-Type: application/json-patch+json" \
                  -d "[{\"op\": \"add\", \"path\": \"/fields/System.State\", \"value\": \"Committed\"}]" \
                  https://dev.azure.com/$(AZURE_DEVOPS_ORG)/$(AZURE_DEVOPS_PROJECT)/_apis/wit/workitems/$US_ID?api-version=7.0
              fi

            else
              # -----------------------------
              # Push a feature branch → mover task a In Progress
              # -----------------------------
              echo "Push a feature branch: Moviendo task $ID a In Progress..."
              curl -s -u :$(PAT) \
                -X PATCH \
                -H "Content-Type: application/json-patch+json" \
                -d "[{\"op\": \"add\", \"path\": \"/fields/System.State\", \"value\": \"In Progress\"}]" \
                https://dev.azure.com/$(AZURE_DEVOPS_ORG)/$(AZURE_DEVOPS_PROJECT)/_apis/wit/workitems/$ID?api-version=7.0
            fi
          done
        done
      env:
        PAT: $(PAT)
      displayName: 'Procesar commits Follow AB#ID y actualizar User Story'
